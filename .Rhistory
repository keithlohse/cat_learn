sum(sim_ppv$falseposMBI1)/sum(sim_ppv$totalposMBI1)*100
sum(sim_ppv$falseposMBI2)/sum(sim_ppv$totalposMBI2)*100
sum(sim_ppv$falseposMBI75)/sum(sim_ppv$totalposMBI75)*100
# By Sample Size
by_size <- sim_ppv %>%
group_by(sample_n) %>%
summarise(
MBIfdr = sum(falseposMBI1)/sum(totalposMBI1)*100,
MBI2fdr = sum(falseposMBI2)/sum(totalposMBI2)*100,
MBI75fdr = sum(falseposMBI75)/sum(totalposMBI75)*100
)
by_size$mbi75ppv <- 100-by_size$MBI75fdr
head(by_size)
plot(MBIfdr~sample_n, data=by_size, ylim=c(0,100))
points(MBI2fdr~sample_n, data=by_size, col="red")
plot(mbi75ppv~sample_n, data=by_size)
set.seed(17)
NoOfTrials <- 1000
# number of repeats in the simulation must be set high to get enough
# relevant MBI results, e.g., =75%;
var <- .364; # true variance
# the specific value of 0.364 is from a pre-post design with r=.818.
# Std dev at baseline=1.0. Variance in change scores=1+1-2*.818=.364;
deltab <- 0.2 # threshold for benefit
deltah <- 0.2 # threshold for harm
maxrisk <- .05 # maximum risk of harm
scale <- 0.1 # scale of Cauchy distribution;
lowerES <- -1 # lowest possible effect size;
higherES <- 1 # highest possible effect size;
nhigh <- 40 #range of sample sizes desired;
MBIProb <- 0.75 #The value of MBI for which you want a PPV,
# eg .75 will return all inferences between 75% and 76%;
int=.01 # size of the intervals for integration by parts;
# Generating a simulated data frame ----
n <- c(seq(from=36, to=nhigh, by=1)) # Sample Size
ES<-c(seq(from=lowerES, to=higherES, by=0.1)) # Range of effect size
Trial<-c(seq(from=1, to=NoOfTrials, by =1))
index<-c(seq(from =1, to=length(n)*length(ES)*length(Trial), by=1))
sim_ppv<-data.frame(index)
tt<-0
# Simulating the different sample size by effect size combinations ----
for (j in 1:length(n)) {
for (k in 1:length(ES)) {
for (l in 1:length(Trial)){
tt<-tt+1
print(tt)
SampleA<-rnorm(n=n[j], mean=0, sd=sqrt(var))
# change scores for pre-post study or abs value for cross-sectional study;
SampleB<-rnorm(n=n[j], mean=ES[k], sd=sqrt(var))
# change scores for pre-post study or abs value for cross-sectional study;
sim_ppv$ES[tt] <- ES[k]
sim_ppv$n_per_group[tt] <- n[j]
sim_ppv$groupA_mean[tt] <- mean(SampleA)
sim_ppv$groupB_mean[tt] <- mean(SampleB)
sim_ppv$groupA_sd[tt] <- sd(SampleA)
sim_ppv$groupB_sd[tt] <- sd(SampleB)
}
}
}
write.csv(sim_ppv, "./PPV.csv")
getwd()
mpg
MPG
data("mtcars")
head(mtcars)
library(ggplot2)
mpg
data(mpg)
head(mpg)
write.csv(mpg, "./mpg.csv")
write.csv(mpg, "./mpg.csv", header=TRUE)
write.csv(mpg, "./mpg.csv")
getwd()
setwd("C:/Users/u6015231/Box Sync/KINES_6770_instrumentation/data/eeg_data")
file_list <- list.files()
file_list
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("MASTER")){
MASTER <- read.table(file, header=TRUE, sep=",")
# Take the subject ID from the file name and make it a variable:
MASTER$subID <-factor(substr(file, start = 1, stop = 3))
# Extract the block from the file name and make it a variable:
MASTER$block <-factor(substr(file, start = 25, stop = 27))
print(file)
}
# if the merged dataset does exist, append to it
if (exists("MASTER")){
# Create the temporary data file:
temp_dataset <-read.table(file, header=TRUE, sep=",")
# Take the subject ID from the file name and make it a variable:
temp_dataset$subID <-factor(substr(file, start = 1, stop = 3))
# Extract the block from the file name and make it a variable:
temp_dataset$block <-factor(substr(file, start = 25, stop = 27))
# Row bind the temporary data to the master data
MASTER<-rbind(MASTER, temp_dataset)
# Remove or "empty" the temporary data set
rm(temp_dataset)
print(file)
}
}
## Opening libraries -----------------------------------------------------------
library("ggplot2"); library("lme4"); library("lmerTest");library("dplyr");
library("car")
# if you do not already have these libraries installed, you will need to run:
# install.packages("ggplot2"); install.packages("lme4"); install.packages("lmerTest");
# install.packages("dplyr"); install.packages("car")
## Set working Directory ------------------------------------------------
getwd()
setwd("~/GitHub/cat_learn/")
getwd()
# let's see what is in the data folder
list.files()
##  Create a new smaller dataframe, REST, PRE, PRAC ----------------------------
DATA <- read.csv("./data_MASTER.csv",
header = TRUE, sep=",",na.strings=c("","NA"))
head(DATA)
DATA$trial.c<-(DATA$trial-mean(DATA$trial))/10 #1-unit change = 10 trials
DATA$stim_cat<-factor(DATA$stim_cat)
DATA$resp_cat<-factor(DATA$resp_cat)
DATA$next_resp_same_cat<-factor(DATA$next_resp_same_cat)
DATA$prev_resp_same_cat<-factor(DATA$prev_resp_same_cat)
# Removing NAs for missed responses (1 exclusion)
DAT2<-subset(DATA, correct != "NA")
# Removing NAs for artifact rejection in the RewP (92 exclusions)
DAT2<-subset(DAT2, RewP != "NA")
## Removing statistical outliers in the data -----------------------------------
# Removing RewP Outliers ----
summary(DAT2$RewP)
sd(DAT2$RewP, na.rm=TRUE)
quantile(DAT2$RewP, c(0.01,0.50,0.99), na.rm=TRUE)
plot(density(DAT2$RewP))
DAT2<-subset(DAT2, RewP >= -50)
DAT2<-subset(DAT2, RewP <= 50)
plot(density(DAT2$RewP))
# Removal of outlying ESPN and FSPN values.
# Removing Encoding SPN Outliers ----
summary(DAT2$stim_SPN)
sd(DAT2$stim_SPN, na.rm=TRUE)
plot(density(DAT2$stim_SPN, na.rm=TRUE))
quantile(DAT2$stim_SPN, c(0.0005,0.50,0.9995), na.rm=TRUE)
DAT2<-subset(DAT2, stim_SPN >= -130)
DAT2<-subset(DAT2, stim_SPN <= 130)
plot(density(DAT2$stim_SPN, na.rm=TRUE))
# Removing Feedback SPN Outliers ----
summary(DAT2$fdbk_SPN)
sd(DAT2$fdbk_SPN, na.rm=TRUE)
plot(density(DAT2$fdbk_SPN, na.rm=TRUE))
quantile(DAT2$fdbk_SPN, c(0.0005,0.50,0.9995), na.rm=TRUE)
DAT2<-subset(DAT2, fdbk_SPN >= -196)
DAT2<-subset(DAT2, fdbk_SPN <= 196)
plot(density(DAT2$fdbk_SPN, na.rm=TRUE))
## Merging the acquistion data with the learning data --------------------------
LEARN <- read.csv("./data_POST_AVE.csv",
header = TRUE, sep=",",na.strings=c("","NA"))
head(LEARN)
# selecting the subset of columns we want (ignoring individual categories for now)
head(LEARN[c(1,2,8,14,15,21,27,28,29,30,36:46)])
LEARN2<-LEARN[c(1,2,8,14,15,21,27,28,29,30,36:46)]
COMB <- merge(DAT2, LEARN2, by ="subID")
head(COMB)
## -------------------------- Overall Analyses ---------------------------------
## ------------------------ Single Trial Analyses ------------------------------
## Improvement Over Time During Practice ---------------------------------------
## Does accuracy improve over time?
head(COMB)
COMB$hit_binom<-(COMB$hit+1)/2
COMB$sterile.c<-(as.numeric(COMB$acq_cond)-1.5)*2
summary(as.factor(COMB$sterile))
summary(COMB$trial.c)
contrasts(COMB$stim_cat)<-contr.poly(5)
p01<-glmer(hit_binom~
# Fixed-effects
1+sterile.c*trial.c+ # adding in interaction
# Random-effects
(1+trial.c|subID)+(1|stim_cat)+(1|subID:stim_cat), data=COMB, family = binomial)
summary(p01)
Anova(p01, type=c("III"))
## Aggregate RewP --------------------------------------------------------------
POST <- read.csv("./data_POST_LONG.csv",
header = TRUE, sep=",",na.strings=c("","NA"))
POST$sterile.c<-(as.numeric(POST$acq_cond)-1.5)*2
head(POST)
AVE<-subset(POST, post_cond=="game" & rotated=="-1")
AVE<-subset(AVE, RewP_diff_Windows!="NA")
summary(AVE$RewP_diff_Windows)
m02<-lm(RewP_diff_Windows~sterile.c, data=AVE)
summary(m02)
anova(m02)
t.test(RewP_diff_Windows~acq_cond, data=AVE, paired=FALSE, var.equal=TRUE)
## Primary Analysis: Engagement --------------------------------------------------
head(AVE)
m05<-lm(eng_total~acq_cond, data=AVE)
summary(m05)
t.test(eng_total~acq_cond, data=AVE ,var.equal=TRUE)
## Practice Performance as a funciton of RewP ----------------------------------
head(LEARN)
LEARN$sterile.c<-(as.numeric(LEARN$acq_cond)-1.5)*2
m00a<-lm(sqrt(acq_total)~sterile.c+RewP_diff_Windows, data=LEARN)
summary(m00a)
#plot(m00b)
summary(LEARN$acq_cond)
m00b<-lm(sqrt(acq_total)~sterile.c+RewP_hit_ave_Windows+RewP_miss_ave_Windows,
data=LEARN)
summary(m00b)
#plot(m00b)
## -----------------------------------------------------------------------------
## Figure 3: Plot of Accuracy over Time by Category ----------------------------
labels <- c(game = "Game Group", sterile = "Sterile Group")
ggplot(data = COMB,
mapping = aes(x = trial, y = hit_binom)) +
geom_jitter(aes(fill=stim_cat), pch=21, size= 2, height=0.01) +
stat_smooth(aes(color=stim_cat, lty=stim_cat), lwd=1.5, method="lm", se=FALSE)+
facet_wrap(~acq_cond, labeller=labeller(acq_cond=labels))+
scale_x_continuous(name = "Trial Number") +
scale_y_continuous(name = "Proportion Correct")+
scale_linetype_manual(name="Stimulus Category",
breaks=c("1", "2", "3", "4", "5"),
labels=c("Cat 1", "Cat 2", "Cat 3", "Cat 4", "Cat 5"),
values = c(1,2,4,5,6))+
scale_fill_manual(name="Stimulus Category",
breaks=c("1", "2", "3", "4", "5"),
labels=c("Cat 1", "Cat 2", "Cat 3", "Cat 4", "Cat 5"),
values = c("black", "grey20", "grey30", "grey40", "grey50"))+
scale_color_manual(name="Stimulus Category",
breaks=c("1", "2", "3", "4", "5"),
labels=c("Cat 1", "Cat 2", "Cat 3", "Cat 4", "Cat 5"),
values = c("black", "grey20", "grey30", "grey40", "grey50"))+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
strip.text = element_text(size=16, face="bold"),
legend.position = "bottom")
## -----------------------------------------------------------------------------
## Sequential Effects on the RewP -----------------------------------------------
head(COMB)
SEQ <- subset(COMB, prev_resp_hit != "NA")
summary(as.factor(SEQ$sterile.c))
summary(as.factor(SEQ$hit))
summary(as.factor(SEQ$prev_resp_hit))
s01<-lmer(RewP~
# Fixed-effects
1+sterile.c*trial.c*hit*prev_resp_hit+ # adding in interaction
# Random-effects
(1+trial.c|subID)+(1|stim_cat)+(1|subID:stim_cat), data=SEQ, REML=FALSE)
summary(s01)
Anova(s01, type=c("III"))
## Figure 5A: Sequential Effect on RewP ----------------------------------------
head(COMB)
labels <- c(correct = "Previous Correct", incorrect = "Previous Incorrect")
ggplot(data = SEQ,
mapping = aes(x = correct, y = RewP)) +
geom_jitter(aes(fill=correct), position=position_jitterdodge(dodge.width=1),
pch=21, size=3, alpha = .6) +
geom_boxplot(aes(fill=correct), alpha = .8, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
scale_fill_manual(values = c("grey40", "white"))+
facet_wrap(~prev_resp_correct, labeller=labeller(prev_resp_correct=labels))+
scale_x_discrete(name = "Current Response") +
scale_y_continuous(name = expression("sFA ("*mu*"V)"), limits=c(-50,50))+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
strip.text = element_text(size=16, face="bold"),
legend.position = "none")
## Figure 5B: RewP Over Time ---------------------------------------------------
head(COMB)
labels <- c(correct = "Previous Correct", incorrect = "Previous Incorrect")
ggplot(data = SEQ,
mapping = aes(x = trial, y = RewP)) +
geom_point(aes(fill=correct), pch=21, size=3, alpha = .6) +
stat_smooth(aes(lty=correct), col="black", method="lm", lwd = 1.5, se=FALSE)+
facet_wrap(~prev_resp_correct, labeller=labeller(prev_resp_correct=labels))+
scale_x_continuous(name = "Trial Number") +
scale_y_continuous(name = expression("RewP ("*mu*"V)"), limits=c(-50,50))+
scale_linetype_manual(name="Current Response",
breaks=c("correct", "incorrect"),
labels=c("Correct", "Incorrect"),
values = c(1,4))+
scale_fill_manual(name="Current Response",
breaks=c("correct", "incorrect"),
labels=c("Correct", "Incorrect"),
values = c("grey40","white"))+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
strip.text = element_text(size=16, face="bold"),
legend.position = "bottom")
## Retaining or Changing Responses ---------------------------------------------
## Does RewP predict keeping the same response or changing your response
# the next time you see a stimulus of the same category:
NEXT<-subset(COMB, next_cat_change != "NA")
head(NEXT)
summary(NEXT$next_cat_change)
summary(NEXT$RewP)
NEXT$RewP.c<-NEXT$RewP-mean(NEXT$RewP)
summary(NEXT$RewP.c)
summary(as.factor(NEXT$hit))
summary(as.factor(NEXT$sterile.c))
n01<-glmer(next_cat_change~
# Fixed-effects
1+sterile.c*trial*RewP.c*hit+ # adding in interaction
# Random-effects
(1+trial.c|subID)+(1|stim_cat)+(1|subID:stim_cat), data=NEXT, family = binomial)
summary(n01)
Anova(n01, type=c("III"))
## Figure 6A: Plot of Accuracy over Time by Category ---------------------------
labels <- c(game = "Game Group", sterile = "Sterile Group")
ggplot(data = NEXT,
mapping = aes(x = trial, y = next_cat_change)) +
geom_jitter(aes(fill=stim_cat), pch=21, size= 2, height=0.01) +
stat_smooth(aes(col=stim_cat, lty=stim_cat), lwd=1.5, method="lm", se=FALSE)+
facet_wrap(~acq_cond, labeller=labeller(acq_cond=labels))+
scale_linetype_manual(name="Stimulus Category",
breaks=c("1", "2", "3", "4", "5"),
labels=c("Cat 1", "Cat 2", "Cat 3", "Cat4", "Cat 5"),
values = c(1,2,4,5,6))+
scale_fill_manual(name="Stimulus Category",
breaks=c("1", "2", "3", "4", "5"),
labels=c("Cat 1", "Cat 2", "Cat 3", "Cat4", "Cat 5"),
values = c("black", "grey20", "grey30", "grey40", "grey50"))+
scale_color_manual(name="Stimulus Category",
breaks=c("1", "2", "3", "4", "5"),
labels=c("Cat 1", "Cat 2", "Cat 3", "Cat4", "Cat 5"),
values = c("black", "grey20", "grey30", "grey40", "grey50"))+
scale_x_continuous(name = "Trial Number") +
scale_y_continuous(name = "Proportion of Change")+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
strip.text = element_text(size=16, face="bold"),
legend.position = "bottom")
## Figure 6B: Switching by Trial and Accuracy ----------------------------------
labels <- c(game = "Game Group", sterile = "Sterile Group")
g1<-ggplot(data = NEXT,
mapping = aes(x = trial, y = next_cat_change)) +
geom_point(aes(fill=correct), pch=21, size=3, alpha = .6) +
stat_smooth(aes(lty=correct, col=correct), method="lm", lwd = 1.5, se=FALSE)+
facet_wrap(~acq_cond, labeller=labeller(acq_cond=labels))+
scale_x_continuous(name = "Trial Number", lim=c(1,80)) +
scale_y_continuous(name = "Log-Odds of Changing \n Response", lim=c(-2,2))+
scale_linetype_manual(name="Current Response",
breaks=c("correct", "incorrect"),
labels=c("Correct", "Incorrect"),
values = c(1,4))+
scale_color_manual(name="Current Response",
breaks=c("correct", "incorrect"),
labels=c("Correct", "Incorrect"),
values = c("black","black"))+
scale_fill_manual(name="Current Response",
breaks=c("correct", "incorrect"),
labels=c("Correct", "Incorrect"),
values = c("grey20","white"))+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
strip.text = element_text(size=16, face="bold"),
legend.position = "bottom")
# # Code to help make an alternative plot that accords directly with the output
# acq_cond<-c("game", "game", "sterile", "sterile")
# correct<-c("correct","incorrect","correct","incorrect")
# Intercepts<-c(0.6156439, 1.4633345, 0.4256447, 1.2204441)
# Slopes<- c(-0.0127207, -0.0129601, -0.0283601, -0.0052855)
# dd<-data.frame(acq_cond, correct, Intercepts,Slopes)
# dd
# g2<- g1 + geom_abline(aes(intercept=Intercepts, slope=Slopes, lty=correct), lwd=2, data=dd)
#
# plot(g2)
## -----------------------------------------------------------------------------
## Figure 6C: Switching by RewP and Accuracy ----------------------------------
labels <- c(game = "Game Group", sterile = "Sterile Group")
head(NEXT)
g1<-ggplot(data = NEXT,
mapping = aes(x = RewP, y = next_cat_change)) +
geom_point(aes(fill=correct), pch=21, size=3, alpha = .6) +
stat_smooth(aes(lty=correct, col=correct), method="lm", lwd = 1.5, se=FALSE)+
facet_wrap(~acq_cond, labeller=labeller(acq_cond=labels))+
scale_x_continuous(name = expression("Current RewP ("*mu*"V)"), lim=c(-50,50)) +
scale_y_continuous(name = "Log-Odds of Changing \n Response", lim=c(-2,2))+
scale_linetype_manual(name="Current Response",
breaks=c("correct", "incorrect"),
labels=c("Correct", "Incorrect"),
values = c(1,4))+
scale_color_manual(name="Current Response",
breaks=c("correct", "incorrect"),
labels=c("Correct", "Incorrect"),
values = c("black","black"))+
scale_fill_manual(name="Current Response",
breaks=c("correct", "incorrect"),
labels=c("Correct", "Incorrect"),
values = c("black","white"))+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
strip.text = element_text(size=16, face="bold"),
legend.position = "bottom")
# # Code to help make an alternative plot that accords directly with the output
# acq_cond<-c("game", "game", "sterile", "sterile")
# correct<-c("correct","incorrect","correct","incorrect")
# Intercepts<-c(0.105, 0.945, -0.717, 1.011)
# Slopes<- c(0.004, 0.024, 0.02, -0.004)
# dd<-data.frame(acq_cond, correct, Intercepts,Slopes)
# dd
# g2<- g1 + geom_abline(aes(intercept=Intercepts, slope=Slopes, lty=correct), lwd=2, data=dd)
#
# plot(g2)
## -----------------------------------------------------------------------------
## Registered Analyses: Effects on Learning ------------------------------------
head(POST)
POST$sterile<-(as.numeric(POST$acq_cond)-1.5)*2
summary(as.factor(POST$sterile))
m01<-lmer(rt_correct~
# Fixed-effects
1+
sterile*retention*rotated+ # adding in interaction
# Random-effects
(1|subID)+(1|retention:subID)+(1|rotated:subID), data=POST, REML=FALSE)
Anova(m01, type="III")
summary(m01)
## Figure 3A: Number Correct as a Function of Group, Condition, and Rotation -----
labels <- c(game = "Game Group", sterile = "Sterile Group")
ggplot(data = POST,
mapping = aes(x = post_cond, y = num_correct)) +
geom_jitter(aes(fill=as.factor(rotated)), position=position_jitterdodge(dodge.width=0.75),
pch=21, size=1.5, stroke=1, col="black", alpha = .8) +
geom_boxplot(aes(fill=as.factor(rotated)), alpha = .8, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
facet_wrap(~acq_cond, labeller=labeller(acq_cond=labels))+
scale_x_discrete(name = "Post-Test Condition") +
scale_y_continuous(name = "Number Correct")+
scale_fill_manual(name="Stimulus Orientation",
breaks=c("-1", "1"),
labels=c("Original", "Rotated"),
values = c("grey20", "white"))+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
strip.text = element_text(size=16, face="bold"),
legend.position = "bottom")
## Primary Analysis: Response Time on Correct Trials ---------------------------
m01<-lmer(md_crt_time~
# Fixed-effects
1+
sterile*retention*rotated+ # adding in interaction
# Random-effects
(1|subID)+(1|retention:subID)+(1|rotated:subID), data=POST, REML=FALSE)
Anova(m01, type = "III")
summary(m01)
## Figure 3B: Median Correct Response Time as a Function of Group --------------
## Condition, and Rotation
labels <- c(game = "Game Group", sterile = "Sterile Group")
ggplot(data = POST,
mapping = aes(x = post_cond, y = md_crt_time)) +
geom_jitter(aes(fill=as.factor(rotated)), position=position_jitterdodge(dodge.width=0.75),
pch=21, size=1.5, stroke=1, col="black", alpha = .8) +
geom_boxplot(aes(fill=as.factor(rotated)), alpha = .8, notch=FALSE,
col="black", lwd=1, outlier.shape=NA)+
facet_wrap(~acq_cond, labeller=labeller(acq_cond=labels))+
scale_x_discrete(name = "Post-Test Condition") +
scale_y_continuous(name = "Median Response Time on\n Correct Trials (s)")+
scale_fill_manual(name="Stimulus Orientation",
breaks=c("-1", "1"),
labels=c("Original", "Rotated"),
values = c("grey20", "white"))+
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
strip.text = element_text(size=16, face="bold"),
legend.position = "bottom")
## Primary Analysis: RewP -------------------------------------------------------
head(LEARN)
LEARN$rt_correct<-sqrt(LEARN$post_total)
LEARN$rt_acq_correct<-sqrt(LEARN$acq_total)
m02b<-(lm(rt_correct~acq_cond+RewP_ave+rt_acq_correct, data=LEARN))
summary(m02b)
summary(lm(rt_correct~RewP_diff_Windows, data=LEARN))
summary(p01)
## Aggregate RewP --------------------------------------------------------------
POST <- read.csv("./data_POST_LONG.csv",
header = TRUE, sep=",",na.strings=c("","NA"))
POST$sterile.c<-(as.numeric(POST$acq_cond)-1.5)*2
head(POST)
AVE<-subset(POST, post_cond=="game" & rotated=="-1")
AVE<-subset(AVE, RewP_diff_Windows!="NA")
summary(AVE$RewP_diff_Windows)
m02<-lm(RewP_diff_Windows~sterile.c, data=AVE)
summary(m02)
m05<-lm(eng_total~acq_cond, data=AVE)
summary(m05)
t.test(eng_total~acq_cond, data=AVE ,var.equal=TRUE)
m00a<-lm(sqrt(acq_total)~sterile.c+RewP_diff_Windows, data=LEARN)
summary(m00a)
m00b<-lm(sqrt(acq_total)~sterile.c+RewP_hit_ave_Windows+RewP_miss_ave_Windows,
data=LEARN)
summary(m00b)
summary(s01)
summary(n01)
n01<-glmer(next_cat_change~
# Fixed-effects
1+sterile.c*trial.c*RewP.c*hit+ # adding in interaction
# Random-effects
(1+trial.c|subID)+(1|stim_cat)+(1|subID:stim_cat), data=NEXT, family = binomial)
summary(n01)
m02b<-(lm(rt_correct~acq_cond+RewP_ave+rt_acq_correct, data=LEARN))
summary(m02b)
summary(lm(rt_correct~RewP_diff_Windows, data=LEARN))
